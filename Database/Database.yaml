AWSTemplateFormatVersion: '2010-09-09'

Description: 'Creates an RDS Aurora Cluster with master | replica instance'

Parameters:

  DBName:
    Default: MyDatabase
    Description: The database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.

  DBUser:
    NoEcho: 'true'
    Description: The database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.

  DBPassword:
    NoEcho: 'true'
    Description: The database admin account password
    Type: String
    MinLength: '1'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]+'
    ConstraintDescription: must contain only alphanumeric characters.

  DatabaseInstanceType:
    Description: The database instance type
    Type: String
    Default: db.t2.small
    AllowedValues: [db.t1.micro, db.m1.small, db.m1.medium, db.m1.large, db.m1.xlarge,
      db.m2.xlarge, db.m2.2xlarge, db.m2.4xlarge, db.m3.medium, db.m3.large, db.m3.xlarge,
      db.m3.2xlarge, db.m4.large, db.m4.xlarge, db.m4.2xlarge, db.m4.4xlarge, db.m4.10xlarge,
      db.r3.large, db.r3.xlarge, db.r3.2xlarge, db.r3.4xlarge, db.r3.8xlarge, db.m2.xlarge,
      db.m2.2xlarge, db.m2.4xlarge, db.cr1.8xlarge, db.t2.micro, db.t2.small, db.t2.medium,
      db.t2.large]
    ConstraintDescription: must select a valid database instance type.

Resources:

  PasswordSSM:
    Type: "AWS::SSM::Parameter"
    Properties:
      Description: Password
      Name: Password
      Type: String
      Value: !Ref DBPassword

  UserSSM:
    Type: "AWS::SSM::Parameter"
    Properties:
      Description: User
      Name: User
      Type: String
      Value: !Ref DBUser

  EndpointSSM:
    Type: "AWS::SSM::Parameter"
    DependsOn: DatabaseCluster
    Properties:
      Description: Endpoint
      Name: Endpoint
      Type: String
      Value: !GetAtt DatabaseCluster.Endpoint.Address

  DatabaseSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
        DBSubnetGroupDescription: CloudFormation managed DB subnet group.
        SubnetIds:
            - !ImportValue PrivateOne
            - !ImportValue PrivateTwo

  DatabaseCluster:
    Type: AWS::RDS::DBCluster
    Properties:
        Engine: aurora
        Port: 3306 #Optional, you could use another one
        DatabaseName : "Database_example"
        MasterUsername:
            Ref: DBUser
        MasterUserPassword:
            Ref: DBPassword
        PreferredBackupWindow: 02:00-03:00
        PreferredMaintenanceWindow: mon:03:00-mon:04:00
        DBSubnetGroupName:
            Ref: DatabaseSubnetGroup
        VpcSecurityGroupIds:
          - !ImportValue AppSG
        #SnapshotIdentifier #TODO Conditional with user and password

  DatabasePrimaryInstance:
      Type: AWS::RDS::DBInstance
      Properties:
          Engine: aurora
          DBClusterIdentifier:
              Ref: DatabaseCluster
          DBInstanceClass:
              Ref: DatabaseInstanceType
          DBSubnetGroupName:
              Ref: DatabaseSubnetGroup
          AvailabilityZone: !ImportValue AZ1

  DatabaseReplicaInstance:
      Type: AWS::RDS::DBInstance
      Properties:
          Engine: aurora
          DBClusterIdentifier:
              Ref: DatabaseCluster
          DBInstanceClass:
              Ref: DatabaseInstanceType
          DBSubnetGroupName:
              Ref: DatabaseSubnetGroup
          AvailabilityZone: !ImportValue AZ2

# ========================================================================
Outputs:

  Endpoint:
    Description: "Endpoint Database"
    Value: !GetAtt DatabaseCluster.Endpoint.Address
