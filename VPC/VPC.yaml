---
AWSTemplateFormatVersion: "2010-09-09"
Description: "Creates a VPC with 2 public subnets, 2 private subnets"

Parameters:
  AZ1:
    Description: Availability Zone 1
    Type: AWS::EC2::AvailabilityZone::Name

  AZ2:
    Description: Availability Zone 2
    Type: AWS::EC2::AvailabilityZone::Name

  VPCCidr:
    Description: VPC CIDR
    Type: String

  PublicOneCidr:
    Description: VPC CIDR
    Type: String

  PublicTwoCidr:
    Description: VPC CIDR
    Type: String

  PrivateOneCidr:
    Description: VPC CIDR
    Type: String

  PrivateTwoCidr:
    Description: VPC CIDR
    Type: String

Resources:

  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      CidrBlock: !Ref VPC_Cidr
      Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Network"
            Value: "Public"
          -
            Key: "Name"
            Value: "VPC Public and Private with NAT"


  PublicSubnetOne:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId:
        Ref: "VPC"
      CidrBlock: !Ref PublicOne_Cidr
      AvailabilityZone: !Ref AZ1
      MapPublicIpOnLaunch: "true"
      Tags:
        -
          Key: "Application"
          Value:
            Ref: "AWS::StackName"
        -
          Key: "Network"
          Value: "Public One"
        -
          Key: "Name"
          Value: "Public One"


  PublicSubnetTwo:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId:
        Ref: "VPC"
      CidrBlock: !Ref PublicTwo_Cidr
      AvailabilityZone: !Ref AZ2
      MapPublicIpOnLaunch: "true"
      Tags:
        -
          Key: "Application"
          Value:
            Ref: "AWS::StackName"
        -
          Key: "Network"
          Value: "Public Two"
        -
          Key: "Name"
          Value: "Public Two"


  PrivateSubnetOne:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId:
        Ref: "VPC"
      CidrBlock: !Ref PrivateOne_Cidr
      AvailabilityZone: !Ref AZ1
      Tags:
        -
          Key: "Application"
          Value:
            Ref: "AWS::StackName"
        -
          Key: "Network"
          Value: "Private One"
        -
          Key: "Name"
          Value: "Private One"


  PrivateSubnetTwo:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId:
        Ref: "VPC"
      CidrBlock: !Ref PrivateTwo_Cidr
      AvailabilityZone: !Ref AZ2
      Tags:
        -
          Key: "Application"
          Value:
            Ref: "AWS::StackName"
        -
          Key: "Network"
          Value: "Private Two"
        -
          Key: "Name"
          Value: "Private Two"


  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        -
          Key: "Application"
          Value:
            Ref: "AWS::StackName"
        -
          Key: "Network"
          Value: "Public"


  GatewayToInternet:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId:
        Ref: "VPC"
      InternetGatewayId:
        Ref: "InternetGateway"


  PublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId:
        Ref: "VPC"
      Tags:
        -
          Key: "Application"
          Value:
            Ref: "AWS::StackName"
        -
          Key: "Network"
          Value: "Public"


  PublicRoute:
    Type: "AWS::EC2::Route"
    DependsOn: "GatewayToInternet"
    Properties:
      RouteTableId:
        Ref: "PublicRouteTable"
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId:
        Ref: "InternetGateway"


  PublicSubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId:
        Ref: "PublicSubnetOne"
      RouteTableId:
        Ref: "PublicRouteTable"

  PublicSubnetRouteTableAssociationTwo:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId:
        Ref: "PublicSubnetTwo"
      RouteTableId:
        Ref: "PublicRouteTable"


  PublicNetworkAcl:
    Type: "AWS::EC2::NetworkAcl"
    Properties:
      VpcId:
        Ref: "VPC"
      Tags:
        -
          Key: "Application"
          Value:
            Ref: "AWS::StackName"
        -
          Key: "Network"
          Value: "Public"


  InboundHTTPPublicNetworkAclEntry:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      NetworkAclId:
        Ref: "PublicNetworkAcl"
      RuleNumber: "100"
      Protocol: "-1"
      RuleAction: "allow"
      Egress: "false"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: "0"
        To: "65535"


  OutboundPublicNetworkAclEntry:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      NetworkAclId:
        Ref: "PublicNetworkAcl"
      RuleNumber: "100"
      Protocol: "-1"
      RuleAction: "allow"
      Egress: "true"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: "0"
        To: "65535"


  PublicSubnetNetworkAclAssociation:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId:
        Ref: "PublicSubnetOne"
      NetworkAclId:
        Ref: "PublicNetworkAcl"

  PublicSubnetNetworkAclAssociationTwo:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId:
        Ref: "PublicSubnetTwo"
      NetworkAclId:
        Ref: "PublicNetworkAcl"


  NATGateway:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId:
        Fn::GetAtt:
          - "ElasticIP"
          - "AllocationId"
      SubnetId:
        Ref: "PublicSubnetOne"


  ElasticIP:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: "vpc"


  PrivateRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId:
        Ref: "VPC"


  PrivateRouteToInternet:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId:
        Ref: "PrivateRouteTable"
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId:
        Ref: "NATGateway"


  PrivateSubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId:
        Ref: "PrivateSubnetOne"
      RouteTableId:
        Ref: "PrivateRouteTable"

  PrivateSubnetRouteTableAssociationTwo:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId:
        Ref: "PrivateSubnetTwo"
      RouteTableId:
        Ref: "PrivateRouteTable"

# ========================================================================
Outputs:
  VPCId:
    Description: "VPCId of the newly created VPC"
    Value:
      Ref: "VPC"
    Export:
      Name: VPC

  PrivateOne:
    Description: "Private Subnet in AZ1"
    Value:
      Ref: "PrivateSubnetOne"
    Export:
      Name: PrivateOne

  PrivateTwo:
    Description: "Private Subnet in AZ2"
    Value:
      Ref: "PrivateSubnetTwo"
    Export:
      Name: PrivateTwo

  AZ1:
    Description: "AZ 1"
    Value:
      Ref: "AZ1"
    Export:
      Name: AZ1

  AZ2:
    Description: "AZ 2"
    Value:
      Ref: "AZ2"
    Export:
      Name: AZ2
